[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "skyflo-engine"
dynamic = ["version"]
description = "Skyflo.ai Engine Service - Middleware for Cloud Native AI Agent"
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
keywords = ["ai", "agent", "cloud native", "engine", "open source"]
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.27.1",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.2.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "email-validator>=2.1.0.post1",
    "casbin>=1.41.0",
    "httpx>=0.27.0",
    "python-multipart>=0.0.9",
    "aiohttp>=3.11.14",
    "fastapi-websocket-pubsub>=0.3.9",
    "tortoise-orm>=0.24.2",
    "aerich>=0.8.2",
    "broadcaster>=0.3.1",
    "redis>=5.0.1",
    "fastapi-limiter>=0.1.6",
    "autogen-agentchat>=0.4.9.2",
    "autogen-core>=0.4.9.2",
    "autogen-ext[mcp]>=0.4.9.2",
    "langgraph>=0.3.18",
    "mcp>=1.5.0",
    "openai>=1.68.2",
    "typer>=0.15.2",
    "tenacity>=8.2.3",
    "tomlkit>=0.13.2",
    "tiktoken>=0.9.0",
    "fastapi-users-tortoise>=0.2.0",
    "python-socketio>=5.12.1",
    "python-decouple>=3.8",
    "litellm>=1.67.4",
]

[[project.authors]]
name = "Karan Jagtiani"
email = "karan@skyflo.ai"

[project.optional-dependencies]
default = ["pytest>=8.0.2", "pytest-cov>=4.1.0", "pytest-asyncio>=0.23.5", "pytest-mock>=3.12.0", "pytest-env>=1.1.3", "mypy>=1.8.0", "black>=24.2.0", "ruff>=0.3.0"]

[project.scripts]
skyflo-engine = "engine.main:run"

[project.urls]
Documentation = "https://github.com/skyflo-ai/skyflo#readme"
Issues = "https://github.com/skyflo-ai/skyflo/issues"
Source = "https://github.com/skyflo-ai/skyflo"

[tool.hatch.version]
path = "src/api/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/api"]

[tool.hatch.envs.default]
dependencies = ["pytest>=8.0.2", "pytest-cov>=4.1.0", "pytest-asyncio>=0.23.5", "pytest-mock>=3.12.0", "pytest-env>=1.1.3", "mypy>=1.8.0", "black>=24.2.0", "ruff>=0.3.0"]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov {args:src/api}"
format = "black {args:src/api tests}"
lint = "ruff check {args:src/api tests}"
type-check = "mypy --install-types --non-interactive {args:src/api tests}"

[tool.coverage.run]
source_pkgs = ["api", "tests"]
branch = true
parallel = true
omit = ["src/api/__about__.py"]

[tool.coverage.paths]
api = ["src/api", "*/api/src/api"]
tests = ["tests", "*/api/tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
target-version = "py311"
line-length = 100
select = ["E", "F", "B", "I"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.aerich]
tortoise_orm = "src.api.repositories.database.TORTOISE_ORM_CONFIG"
location = "./migrations"
src_folder = "./."
